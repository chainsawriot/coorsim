% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/05_generate_community_labels.R
\name{slice_community_text}
\alias{slice_community_text}
\title{Slice Community-Level User Descriptions for LLM Annotation}
\usage{
slice_community_text(
  groups_data,
  max_n_per_slice = 10,
  min_chars = 20,
  max_chars = 500,
  min_share = NULL,
  verbose = TRUE,
  seed = 42
)
}
\arguments{
\item{groups_data}{A list that must include `user_labels`, typically created by `sample_user_text()`.}

\item{max_n_per_slice}{Integer. Maximum number of user descriptions to include per text slice. Default is 10.}

\item{min_chars}{Integer. Minimum number of characters required for a user description. Default is 20.}

\item{max_chars}{Integer. Maximum number of characters to retain per user description (after cleaning). Default is 500.}

\item{min_share}{Optional numeric. Minimum total `user_share_comm` per slice to retain the entry. Default is `NULL` (no filtering).}

\item{verbose}{Logical. If `TRUE`, prints how many community slices will be returned. Default is `TRUE`.}

\item{seed}{Integer. Random seed for reproducibility. Default is 42.}
}
\value{
A `data.table` with one row per community-slice, containing:
\itemize{
  \item \code{community} – Community ID.
  \item \code{slice} – Slice index within the community.
  \item \code{n} – Number of user descriptions included in the slice.
  \item \code{sum_user_share_comm} – Cumulative posting share of included users.
  \item \code{text_slice} – Concatenated and cleaned descriptions for LLM input.
}
}
\description{
This function prepares community-level text slices for annotation by aggregating user descriptions 
sampled via `sample_user_text()`. It cleans and truncates descriptions, filters out short or low-coverage 
entries, and creates slice-level summaries by grouping top users in each community.
}
\details{
This function is intended to generate concise, representative community-level summaries 
from user-level metadata before labeling with LLMs. Descriptions are truncated and sanitized to ensure compatibility.
}
\seealso{
[sample_user_text()], [label_communities()], [stringr::str_trunc()]
}
