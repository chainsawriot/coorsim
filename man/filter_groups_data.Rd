% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/04_merging_filtering_functions.R
\name{filter_groups_data}
\alias{filter_groups_data}
\title{Filter and reduce a `groups_data` object by edge, time, similarity, or node-based constraints}
\usage{
filter_groups_data(
  groups_data,
  edge_weight = NULL,
  time_window = NULL,
  min_simil = NULL,
  min_comm_size = NULL,
  min_degree = NULL,
  communities_index = NULL,
  quantile_accounts = NULL,
  quantile_posts = NULL,
  top_n_accounts = NULL,
  top_n_posts = NULL,
  verbose = TRUE
)
}
\arguments{
\item{groups_data}{A named list from `coorsim::coorsim_detect_groups()` with `graph`, `communities`, `edge_list`, `node_list`, etc.}

\item{edge_weight}{Numeric. Minimum edge weight to retain.}

\item{time_window}{Integer. Max seconds between coordinated posts (triggers re-detection).}

\item{min_simil}{Numeric. Minimum cosine similarity between posts (triggers re-detection).}

\item{min_comm_size}{Integer. Minimum size of communities to keep.}

\item{min_degree}{Integer. Minimum node degree to retain.}

\item{communities_index}{Integer vector. Community indices to keep.}

\item{quantile_accounts}{Numeric. Top quantile of communities by account count.}

\item{quantile_posts}{Numeric. Top quantile of communities by post count.}

\item{top_n_accounts}{Integer. Top N communities by account count.}

\item{top_n_posts}{Integer. Top N communities by post count.}

\item{verbose}{Logical. Whether to print progress updates using `cli::cli_inform()`.}
}
\value{
A filtered `groups_data` list with a new `filter` element listing all applied parameters.
}
\description{
This function filters a `groups_data` object (typically returned by `coorsim::coorsim_detect_groups()`)
according to user-specified thresholds. If stricter time or similarity constraints are provided,
it will re-run group detection. At the end, it attaches a `filter` list to the returned object
that records all active filter parameters.
}
