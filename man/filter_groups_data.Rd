% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/04_merging_filtering_functions.R
\name{filter_groups_data}
\alias{filter_groups_data}
\title{Filter and reduce a groups_data object by edge, time, similarity, or node-based constraints}
\usage{
filter_groups_data(
  groups_data,
  edge_weight = NULL,
  time_window = NULL,
  min_simil = NULL,
  min_comm_size = NULL,
  min_participation = NULL,
  min_degree = NULL,
  verbose = T
)
}
\arguments{
\item{groups_data}{A named list created by `coorsim::coorsim_detect_groups()` containing elements like `graph`,
`communities`, `edge_list`, `node_list`, optionally `sim_dt` and `post_data`, and a `params` list.}

\item{edge_weight}{Numeric. Keep only edges with `weight >= edge_weight`.}

\item{time_window}{Integer (seconds). Re-runs group detection using only links with `time_diff <= time_window`.}

\item{min_simil}{Numeric. Re-runs group detection using only links with `similarity >= min_simil`.}

\item{min_comm_size}{Integer. Keep only communities of size at least this value.}

\item{min_participation}{Integer. Keep only nodes that appear in at least this number of edges (as `account_id`).}

\item{min_degree}{Integer. Keep only nodes with degree >= this value.}

\item{verbose}{Logical. If TRUE, progress messages are printed using `cli::cli_inform()`.}
}
\value{
A filtered `groups_data` list with updated elements based on the applied constraints.
}
\description{
This function filters the elements of a `groups_data` object (typically returned by `coorsim_detect_groups()`)
according to user-specified thresholds for edge weight, similarity, time window, community size, node participation,
and node degree. It conditionally re-runs the group detection if thresholds on similarity or time window are stricter
than originally set. The returned object includes only the valid nodes and edges across all contained components.
}
