% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{clean_json_strings}
\alias{clean_json_strings}
\title{Clean and repair JSON-like strings generated by LLMs}
\usage{
clean_json_strings(json_strings)
}
\arguments{
\item{json_strings}{A character vector of JSON-like strings (often malformed) generated by an LLM.}
}
\value{
A character vector of cleaned strings, formatted to increase the likelihood of successful parsing
  with `jsonlite::fromJSON()`.
}
\description{
This function attempts to sanitize JSON-like character strings returned by large language models (LLMs),
preparing them for parsing via `jsonlite::fromJSON()`. It extracts the first substring that resembles
a JSON object, replaces single quotes with double quotes (when safe), escapes backslashes,
and ensures the string is properly enclosed in curly braces.
}
\details{
This function is not guaranteed to fix all malformed JSON but is useful for cleaning common
LLM formatting issues. It does not validate the final JSON structureâ€”only prepares it for parsing.
}
\examples{
# Example 1: Fix single quotes
raw_json <- "{'label':'Test','description':'A test case','lang':'en'}"
clean_json_strings(raw_json)

# Example 2: Handle backslashes in paths
messy_json <- "{'label':'Path','description':'Folder path is C:\\\\\\\\Users\\\\\\\\','lang':'en'}"
clean_json_strings(messy_json)

# Example 3: Add missing braces
no_braces <- "'label':'Oops','lang':'en'"
clean_json_strings(no_braces)

}
\seealso{
[jsonlite::fromJSON()]
}
