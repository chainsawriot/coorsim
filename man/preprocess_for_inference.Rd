% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/08_predict_community_relevance.R
\name{preprocess_for_inference}
\alias{preprocess_for_inference}
\title{Preprocess Community Metrics for Inference}
\usage{
preprocess_for_inference(
  groups_data,
  train_cols = c("g_nodes_n", "g_degree_mean", "g_edge_weight_mean", "g_transitivity",
    "g_diameter", "g_mean_distance", "t_time_diff_mean", "s_duplication_ratio",
    "a_npost_mean", "a_npost_sd", "c_posts_nchar_mean", "c_posts_ntoken_mean",
    "c_posts_ntype_mean", "c_posts_token_length_mean", "c_posts_tokens_gt6_ratio_mean",
    "c_posts_punct_ratio_mean", "c_posts_emoji_ratio_mean", "c_posts_nchar_sd",
    "c_posts_ntoken_sd", "c_posts_ntype_sd", "c_posts_token_length_sd",
    "c_posts_tokens_gt6_ratio_sd", "c_posts_punct_ratio_sd", 
    
    "c_posts_emoji_ratio_sd", "c_bio_nchar_mean", "c_bio_ntoken_mean",
    "c_bio_ntype_mean", "c_bio_ttr_mean", "c_bio_token_length_mean",
    "c_bio_tokens_gt6_ratio_mean", "c_bio_punct_ratio_mean", "c_bio_nchar_sd",
    "c_bio_ntoken_sd", "c_bio_ntype_sd", "c_bio_ttr_sd", "c_bio_token_length_sd",
    "c_bio_tokens_gt6_ratio_sd", "c_bio_punct_ratio_sd", "cluster_method_FSA_V",
    "cluster_method_label_prop", "cluster_method_louvain", "resolution_0_25",
    "resolution_0_7", "resolution_1"),
  categorical_cols = c("cluster_method", "resolution"),
  log_cols = c("g_nodes_n", "g_degree_mean", "g_edge_weight_mean", "g_transitivity",
    "g_diameter", "g_mean_distance", "t_time_diff_mean", "a_npost_mean", "a_npost_sd",
    "c_posts_ntoken_mean", "c_posts_token_length_mean", "c_posts_nchar_sd",
    "c_posts_ntoken_sd", "c_posts_ntype_sd", "c_posts_token_length_sd",
    "c_bio_token_length_mean", "c_bio_nchar_sd", "c_bio_ntoken_sd",
    "c_bio_token_length_sd"),
  verbose = T
)
}
\arguments{
\item{groups_data}{A named list returned by `coorsim::get_community_metrics()`, including elements `community_metrics` and `params`.}

\item{train_cols}{A character vector of feature names used during training. Defaults to the complete set of known training features.}

\item{categorical_cols}{A character vector of categorical variable base names that were one-hot encoded in training.}

\item{log_cols}{A character vector of numeric variables that should be log1p-transformed (if present).}

\item{verbose}{Logical. If `TRUE`, prints messages during preprocessing. Default is `TRUE`.}
}
\value{
A named list with two elements:
\describe{
  \item{`X`}{A numeric matrix of predictors, matching training features and column order.}
  \item{`community_ids`}{A numeric vector of community identifiers preserved from the input.}
}
}
\description{
Prepares the output of `coorsim::get_community_metrics()` for inference using a trained XGBoost ranking model.
This includes selection and ordering of training features, log1p transformation of skewed variables,
one-hot encoding of categorical variables, NA handling, and feature padding to match training layout.
}
\details{
- Missing variables are padded as `NA_real_` or `0` for categorical dummy variables.
- Log1p transformations are only applied to variables listed in `log_cols` that are present in the data.
- Categorical variables are encoded using `mltools::one_hot()` and dot characters in resulting column names are replaced with underscores to ensure SHAP compatibility.
}
